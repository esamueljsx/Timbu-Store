import React from 'react';

const ArrowRight = ({ size, ...rest }) => (
    <svg xmlns="http://www.w3.org/2000/svg" width={size} height={size} viewBox="0 0 320 512" fill='currentColor'><path d="M278.6 233.4c12.5 12.5 12.5 32.8 0 45.3l-160 160c-12.5 12.5-32.8 12.5-45.3 0s-12.5-32.8 0-45.3L210.7 256 73.4 118.6c-12.5-12.5-12.5-32.8 0-45.3s32.8-12.5 45.3 0l160 160z" /></svg>
)

const Instagram = ({ size, ...rest }) => (
    <svg width={size} height={size} viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path fillRule="evenodd" clipRule="evenodd" d="M12 17.5C14.7614 17.5 17 15.2614 17 12.5C17 9.73858 14.7614 7.5 12 7.5C9.23858 7.5 7 9.73858 7 12.5C7 15.2614 9.23858 17.5 12 17.5ZM12 16C13.933 16 15.5 14.433 15.5 12.5C15.5 10.567 13.933 9 12 9C10.067 9 8.5 10.567 8.5 12.5C8.5 14.433 10.067 16 12 16Z" fill="currentColor" />
        <path d="M18 6.5C18 7.32843 17.3284 8 16.5 8C15.6716 8 15 7.32843 15 6.5C15 5.67157 15.6716 5 16.5 5C17.3284 5 18 5.67157 18 6.5Z" fill="currentColor" />
        <path fillRule="evenodd" clipRule="evenodd" d="M2.80385 5C2 6.3923 2 8.26154 2 12C2 15.7385 2 17.6077 2.80385 19C3.33046 19.9121 4.08788 20.6695 5 21.1962C6.3923 22 8.26154 22 12 22C15.7385 22 17.6077 22 19 21.1962C19.9121 20.6695 20.6695 19.9121 21.1962 19C22 17.6077 22 15.7385 22 12C22 8.26154 22 6.3923 21.1962 5C20.6695 4.08788 19.9121 3.33046 19 2.80385C17.6077 2 15.7385 2 12 2C8.26154 2 6.3923 2 5 2.80385C4.08788 3.33046 3.33046 4.08788 2.80385 5ZM7.75559 20.4056C8.78082 20.4986 10.1032 20.5 12 20.5C13.8968 20.5 15.2192 20.4986 16.2444 20.4056C17.249 20.3146 17.8202 20.1453 18.25 19.8971C18.9341 19.5022 19.5022 18.9341 19.8971 18.25C20.1453 17.8202 20.3146 17.249 20.4056 16.2444C20.4986 15.2192 20.5 13.8968 20.5 12C20.5 10.1032 20.4986 8.78082 20.4056 7.75559C20.3146 6.75097 20.1453 6.1798 19.8971 5.75C19.5022 5.06591 18.9341 4.49784 18.25 4.10289C17.8202 3.85474 17.249 3.68541 16.2444 3.59436C15.2192 3.50144 13.8968 3.5 12 3.5C10.1032 3.5 8.78082 3.50144 7.75559 3.59436C6.75097 3.68541 6.1798 3.85474 5.75 4.10289C5.06591 4.49784 4.49784 5.06591 4.10289 5.75C3.85474 6.1798 3.68541 6.75097 3.59436 7.75559C3.50144 8.78082 3.5 10.1032 3.5 12C3.5 13.8968 3.50144 15.2192 3.59436 16.2444C3.68541 17.249 3.85474 17.8202 4.10289 18.25C4.49784 18.9341 5.06591 19.5022 5.75 19.8971C6.1798 20.1453 6.75097 20.3146 7.75559 20.4056Z" fill="currentColor" />
    </svg>
)

const X = ({ size, ...rest }) => (
    <svg width={size} height={size} viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path fillRule="evenodd" clipRule="evenodd" d="M19.5673 4.49055C19.8382 4.17721 19.8038 3.70358 19.4905 3.43267C19.1772 3.16176 18.7035 3.19614 18.4326 3.50948L13.151 9.61809L8.65997 3.63001C8.48056 3.3908 8.19899 3.25001 7.89997 3.25001H4.39997C3.61713 3.25001 3.17026 4.14374 3.63997 4.77001L9.93236 13.1599L4.43306 19.509C4.16187 19.8221 4.19584 20.2957 4.50894 20.5669C4.82203 20.8381 5.29569 20.8041 5.56688 20.491L10.8533 14.3877L15.34 20.37C15.5194 20.6092 15.8009 20.75 16.1 20.75H19.6C20.3828 20.75 20.8297 19.8563 20.36 19.23L14.0721 10.8462L19.5673 4.49055ZM16.375 19.25L5.49997 4.75001H7.62497L18.5 19.25H16.375Z" fill="currentColor" />
    </svg>
)

const YT = ({ size, ...rest }) => (
    <svg width={size} height={size} viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path fillRule="evenodd" clipRule="evenodd" d="M8.49996 13.6459C8.49968 13.9029 8.49932 14.2412 8.54161 14.5263C8.58879 14.8443 8.74956 15.5425 9.46387 15.9469C10.1782 16.3513 10.8595 16.13 11.1565 16.0068C11.4227 15.8964 11.7126 15.7221 11.9328 15.5896L14.677 13.9432C14.8857 13.8182 15.1665 13.6502 15.3834 13.4719C15.6321 13.2676 16.1225 12.7894 16.1225 12C16.1225 11.2106 15.6321 10.7324 15.3834 10.5281C15.1665 10.3498 14.8857 10.1817 14.677 10.0568L11.9329 8.41037C11.7127 8.27793 11.4227 8.10354 11.1565 7.99315C10.8595 7.86997 10.1782 7.64865 9.46387 8.05309C8.74956 8.45752 8.58879 9.15563 8.54161 9.4737C8.49932 9.75875 8.49968 10.0971 8.49996 10.354V13.6459ZM11.2116 9.72695L13.8567 11.314C14.3673 11.6203 14.6225 11.7735 14.6225 12C14.6225 12.2265 14.3673 12.3796 13.8567 12.686L11.2116 14.273C10.6744 14.5953 10.4058 14.7565 10.2029 14.6416C10 14.5267 10 14.2135 10 13.587V10.4129C10 9.7865 10 9.47328 10.2029 9.35839C10.4058 9.24349 10.6744 9.40465 11.2116 9.72695Z" fill="currentColor" />
        <path fillRule="evenodd" clipRule="evenodd" d="M9.94358 3.25C8.10583 3.24998 6.65019 3.24997 5.51098 3.40314C4.33856 3.56076 3.38961 3.89288 2.64124 4.64124C1.89288 5.38961 1.56076 6.33856 1.40314 7.51098C1.24997 8.65019 1.24998 10.1058 1.25 11.9436V12.0564C1.24998 13.8942 1.24997 15.3498 1.40314 16.489C1.56076 17.6614 1.89288 18.6104 2.64124 19.3588C3.38961 20.1071 4.33856 20.4392 5.51098 20.5969C6.65018 20.75 8.1058 20.75 9.94354 20.75H14.0564C15.8942 20.75 17.3498 20.75 18.489 20.5969C19.6614 20.4392 20.6104 20.1071 21.3588 19.3588C22.1071 18.6104 22.4392 17.6614 22.5969 16.489C22.75 15.3498 22.75 13.8942 22.75 12.0565V11.9436C22.75 10.1059 22.75 8.65018 22.5969 7.51098C22.4392 6.33856 22.1071 5.38961 21.3588 4.64124C20.6104 3.89288 19.6614 3.56076 18.489 3.40314C17.3498 3.24997 15.8942 3.24998 14.0564 3.25H9.94358ZM3.7019 5.7019C4.12511 5.27869 4.70476 5.02503 5.71085 4.88976C6.73851 4.75159 8.09318 4.75 10 4.75H14C15.9068 4.75 17.2615 4.75159 18.2892 4.88976C19.2952 5.02503 19.8749 5.27869 20.2981 5.7019C20.7213 6.12511 20.975 6.70476 21.1102 7.71085C21.2484 8.73851 21.25 10.0932 21.25 12C21.25 13.9068 21.2484 15.2615 21.1102 16.2892C20.975 17.2952 20.7213 17.8749 20.2981 18.2981C19.8749 18.7213 19.2952 18.975 18.2892 19.1102C17.2615 19.2484 15.9068 19.25 14 19.25H10C8.09318 19.25 6.73851 19.2484 5.71085 19.1102C4.70476 18.975 4.12511 18.7213 3.7019 18.2981C3.27869 17.8749 3.02502 17.2952 2.88976 16.2892C2.75159 15.2615 2.75 13.9068 2.75 12C2.75 10.0932 2.75159 8.73851 2.88976 7.71085C3.02502 6.70476 3.27869 6.12511 3.7019 5.7019Z" fill="currentColor" />
    </svg>
)

const Cart = ({ size, ...rest }) => (
    <svg width={size} height={size} viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path fillRule="evenodd" clipRule="evenodd" d="M3 3.25C2.58579 3.25 2.25 3.58579 2.25 4C2.25 4.41421 2.58579 4.75 3 4.75C3.81705 4.75 4.52448 5.31748 4.70172 6.11507L5.13165 8.04975C5.13477 8.09674 5.14235 8.14372 5.15449 8.19008L5.20944 8.39979L5.26786 8.6627C5.27935 8.7144 5.29592 8.76366 5.31693 8.81006L6.9921 15.2039C7.53947 17.293 9.42732 18.75 11.587 18.75H16.7506C19.3739 18.75 21.5006 16.6234 21.5006 14V11.2907C21.5006 10.7268 21.4193 10.0465 21.0367 9.44622C20.1758 8.0956 18.674 7.25 17.0314 7.25H6.49052L6.166 5.78968C5.83625 4.30578 4.5201 3.25 3 3.25ZM8.44313 14.8237L6.85182 8.75H17.0314C18.1549 8.75 19.1827 9.32834 19.7718 10.2525C19.931 10.5023 20.0006 10.8465 20.0006 11.2907V14C20.0006 15.7949 18.5455 17.25 16.7506 17.25H11.587C10.1093 17.25 8.81764 16.2531 8.44313 14.8237Z" fill="currentColor" />
        <path d="M17 22C17.5523 22 18 21.5523 18 21C18 20.4477 17.5523 20 17 20C16.4477 20 16 20.4477 16 21C16 21.5523 16.4477 22 17 22Z" fill="currentColor" />
        <path d="M10 21C10 21.5523 9.55228 22 9 22C8.44772 22 8 21.5523 8 21C8 20.4477 8.44772 20 9 20C9.55228 20 10 20.4477 10 21Z" fill="currentColor" />
    </svg>
)

const Profile = ({ size, ...rest }) => (
    <svg xmlns="http://www.w3.org/2000/svg" width={size} height={size} viewBox="0 0 24 24" fill="none"><path d="M12.16 10.87c-.1-.01-.22-.01-.33 0a4.42 4.42 0 0 1-4.27-4.43C7.56 3.99 9.54 2 12 2a4.435 4.435 0 0 1 .16 8.87ZM7.16 14.56c-2.42 1.62-2.42 4.26 0 5.87 2.75 1.84 7.26 1.84 10.01 0 2.42-1.62 2.42-4.26 0-5.87-2.74-1.83-7.25-1.83-10.01 0Z" stroke="currentColor" strokeWidth="1.5" strokeLinecap="round" strokeLinejoin="round"></path></svg>
)

const Trash = ({ size, ...rest }) => (
    <svg width={size} height={size} viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path fillRule="evenodd" clipRule="evenodd" d="M6.71408 5.50646C6.77292 5.48224 6.83584 5.46517 6.90191 5.45645L6.92994 5.45275C7.58111 5.3668 8.13571 4.93723 8.38176 4.32825C8.88923 3.07225 10.1083 2.25 11.4629 2.25H12.8101C14.183 2.25 15.4184 3.08329 15.9327 4.35615L16.0231 4.57999C16.2109 5.0449 16.6274 5.37837 17.1222 5.46001C17.1796 5.46948 17.2344 5.48524 17.286 5.50646C18.0725 5.5679 18.7626 5.62899 19.2595 5.67508C19.5137 5.69865 19.7175 5.71831 19.858 5.7321L20.0196 5.74815L20.0756 5.75381C20.0756 5.75382 20.0767 5.75392 20.0001 6.5L20.0767 5.75392C20.4887 5.79623 20.7884 6.16456 20.7461 6.5766C20.7038 6.98865 20.3355 7.28838 19.9234 7.24608L19.8696 7.24062L19.7114 7.22493C19.5734 7.21137 19.3723 7.19197 19.121 7.16867C18.6184 7.12206 17.9156 7.05989 17.1158 6.99775C15.5107 6.87302 13.5347 6.75 12.0001 6.75C10.4654 6.75 8.48943 6.87302 6.8843 6.99775C6.08447 7.05989 5.38175 7.12206 4.87912 7.16867C4.62786 7.19197 4.42676 7.21137 4.28869 7.22493L4.13053 7.24062L4.07736 7.24601C4.07736 7.24601 4.07667 7.24608 4.07593 7.2389L4.07736 7.24601C3.66531 7.28831 3.29629 6.98865 3.25398 6.5766C3.21167 6.16456 3.51141 5.79623 3.92345 5.75392L4.00006 6.5C3.92345 5.75392 3.92339 5.75393 3.92345 5.75392L3.9805 5.74815L4.14214 5.7321C4.28262 5.71831 4.48641 5.69865 4.7406 5.67508C5.23752 5.629 5.92761 5.5679 6.71408 5.50646ZM9.77253 4.89018C10.0509 4.20111 10.7197 3.75 11.4629 3.75H12.8101C13.5715 3.75 14.2567 4.21214 14.5419 4.91808L14.6323 5.14191C14.6589 5.20755 14.6876 5.27191 14.7185 5.3349C13.7753 5.28433 12.8298 5.25 12.0001 5.25C11.2524 5.25 10.4108 5.27787 9.56152 5.32039C9.64144 5.18341 9.71209 5.03976 9.77253 4.89018Z" fill="white" />
        <path fillRule="evenodd" clipRule="evenodd" d="M6.03959 9.90963L6.39701 18.1303C6.46678 19.735 7.78801 21 9.39418 21H14.2061C15.7622 21 17.06 19.8102 17.1948 18.2599L17.9177 9.94731C17.9638 9.41658 17.5865 8.94382 17.0576 8.88052C15.8216 8.73261 13.6203 8.5 12 8.5C10.3623 8.5 8.13097 8.73765 6.9029 8.88527C6.39052 8.94686 6.01717 9.39406 6.03959 9.90963ZM9.00004 17.25C8.58583 17.25 8.25004 17.5858 8.25004 18C8.25004 18.4142 8.58583 18.75 9.00004 18.75H15C15.4143 18.75 15.75 18.4142 15.75 18C15.75 17.5858 15.4143 17.25 15 17.25H9.00004ZM8.25004 15C8.25004 14.5858 8.58583 14.25 9.00004 14.25H15C15.4143 14.25 15.75 14.5858 15.75 15C15.75 15.4142 15.4143 15.75 15 15.75H9.00004C8.58583 15.75 8.25004 15.4142 8.25004 15ZM9.00004 11.25C8.58583 11.25 8.25004 11.5858 8.25004 12C8.25004 12.4142 8.58583 12.75 9.00004 12.75H15C15.4143 12.75 15.75 12.4142 15.75 12C15.75 11.5858 15.4143 11.25 15 11.25H9.00004Z" fill="white" />
    </svg>
)

const Minus = ({ size, ...rest }) => (
    <svg width={size} height={size} aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 18 2">
        <path stroke="currentColor" strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M1 1h16" />
    </svg>
)

const Plus = ({ size, ...rest }) => (
    <svg width={size} height={size} aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 18 18">
        <path stroke="currentColor" strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M9 1v16M1 9h16" />
    </svg>
)

const Check = ({ size, ...rest }) => (
    <svg xmlns="http://www.w3.org/2000/svg" width={size} height={size} viewBox="0 0 24 24" fill="none"><path d="M12 2C6.49 2 2 6.49 2 12s4.49 10 10 10 10-4.49 10-10S17.51 2 12 2Zm4.78 7.7-5.67 5.67a.75.75 0 0 1-1.06 0l-2.83-2.83a.754.754 0 0 1 0-1.06c.29-.29.77-.29 1.06 0l2.3 2.3 5.14-5.14c.29-.29.77-.29 1.06 0 .29.29.29.76 0 1.06Z" fill="#66EA97"></path></svg>
)

const Icon = ({ type, size, ...rest }) => {
    switch (type) {
        case 'check':
            return <Check size={size} {...rest} />;
        case 'minus':
            return <Minus size={size} {...rest} />;
        case 'plus':
            return <Plus size={size} {...rest} />;
        case 'trash':
            return <Trash size={size} {...rest} />;
        case 'profile':
            return <Profile size={size} {...rest} />;
        case 'cart':
            return <Cart size={size} {...rest} />;
        case 'arrow-right':
            return <ArrowRight size={size} {...rest} />;
        case 'instagram':
            return <Instagram size={size} {...rest} />;
        case 'x':
            return <X size={size} {...rest} />;
        case 'yt':
            return <YT size={size} {...rest} />;
        case 'menu':
            return <Hamburger size={size} {...rest} />;
        case 'close':
            return <Close size={size} {...rest} />;
        default:
            return null;
    }
};

export default Icon;